% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind_bm25.R
\name{bind_bm25}
\alias{bind_bm25}
\alias{bind_bm25_}
\title{Bind BM25 Score of a tidy text dataset to the dataset}
\usage{
bind_bm25(tbl, term_col, document_col, n_col, k = 1.2, b = 1)

bind_bm25_(tbl, term_col, document_col, n_col, k = 1.2, b = 1)
}
\arguments{
\item{tbl}{A tidy text dataset with one-row-per-term-per-document}

\item{term_col}{Column containing terms}

\item{document_col}{Column containing document IDs}

\item{n_col}{Column containing document-term counts}

\item{k}{tuning parameter to modify the impact the TF. higher k causes TF to take longer to reach saturation.}

\item{b}{tuning parameter to control the effect of document length normalization. \code{b = 0} disables normalization and \code{b = 1} enables full normalization.}
}
\description{
Bind BM25 Score of a tidy text dataset to the dataset
}
\details{
BM25 (also known as Okapi BM25) is probabilistic term weighting model. It considers  term relevance saturation and length normalization. One of its uses is search engines, where it is used as a ranking function.

\code{bind_bm25} is given bare names, while \code{bind_bm25_}
is given strings.
The dataset must have one row per document-term combination.
}
\examples{

library(dplyr)
library(janeaustenr)

book_words <- austen_books() \%>\%
  unnest_tokens(word, text) \%>\%
  anti_join(stop_words) \%>\%
  count(book, word, sort = TRUE) \%>\%
  ungroup()

# calculate the BM25 score for words in each document
book_words \%>\%
  bind_bm25(word, book, n, k = 1.2, b = 1) \%>\%
  arrange(desc(bm25))
}
